{"version":3,"sources":["Componets/Tables.js","Componets/Headers.js","Componets/Nav.js","App.js","index.js"],"names":["id","socket","document","getElementById","io","process","PORT","undefined","console","log","on","data","length","x","row","insertRow","TimeCell","insertCell","SymbolCell","QuotesCell","BBOCell","TradesCell","innerHTML","Time","Symbol","Quotes","BBO","Trades","style","height","slice","color","parseInt","classList","add","Tables","className","scope","Headers","Nav","position","top","width","zIndex","href","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bdfb170f.chunk.js","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\nimport './main.css';\n\nconst element = (id) => {\n    return document.getElementById(id)};\n\nconst tableBody = element('tableBody')\n\nconst socket = io(process.env.PORT || 'http://localhost:3001');\n\nif(socket !== undefined){\n    console.log('connected to socket')\n    socket.on('options', (data) => {\n        if(data.length){\n            for(var x=0; x<data.length;x++){\n                var table = document.getElementById('options-tableBody')\n                var row = table.insertRow(0);\n                var TimeCell = row.insertCell(0);\n                var SymbolCell = row.insertCell(1);\n                var QuotesCell = row.insertCell(2);\n                var BBOCell = row.insertCell(3);\n                var TradesCell = row.insertCell(4);\n\n                TimeCell.innerHTML = `${data[x].Time}`\n                SymbolCell.innerHTML = `${data[x].Symbol}`\n                QuotesCell.innerHTML = `${data[x].Quotes}`\n                BBOCell.innerHTML = `${data[x].BBO}`\n                TradesCell.innerHTML = `${data[x].Trades}`\n                row.style.height = \"41.5px\";\n                if (data[x].Symbol.slice(-1) === 'C') {\n                    SymbolCell.style.color=\"green\";\n                } else {\n                    SymbolCell.style.color=\"red\";\n                }\n                // -------------------------------------\n\n                if (parseInt(data[x].Quotes) > 500) {\n                    row.classList.add('table-warning');\n                    row.classList.add('bold');\n                }\n\n                if (parseInt(data[x].Trades) > 500) {\n                    row.classList.add('table-warning');\n                    row.classList.add('bold');\n                }\n\n                if (parseInt(data[x].BBO) > 500) {\n                    row.classList.add('table-warning');\n                    row.classList.add('bold');\n                }\n                \n            }\n        }\n    });\n    socket.on('futures', (data) => {\n        if(data.length){\n            for(var x=0; x<data.length;x++){\n                var table = document.getElementById('futures-tableBody')\n                var row = table.insertRow(0);\n                var TimeCell = row.insertCell(0);\n                var SymbolCell = row.insertCell(1);\n                var QuotesCell = row.insertCell(2);\n                var BBOCell = row.insertCell(3);\n                var TradesCell = row.insertCell(4);\n\n                TimeCell.innerHTML = `${data[x].Time}`\n                SymbolCell.innerHTML = `${data[x].Symbol}`\n                QuotesCell.innerHTML = `${data[x].Quotes}`\n                BBOCell.innerHTML = `${data[x].BBO}`\n                TradesCell.innerHTML = `${data[x].Trades}`\n\n                if (parseInt(data[x].Quotes) > 140) {\n                    row.classList.add('table-warning');\n                    row.classList.add('bold');\n                }\n\n                if (parseInt(data[x].Trades) > 100) {\n                    row.classList.add('table-warning');\n                    row.classList.add('bold');\n                }\n            }\n        }\n    });\n    socket.on('output', (data) => {\n        if(data.length){\n            for(var x=0; x<data.length;x++){\n                var table = document.getElementById('tableBody')\n                var row = table.insertRow(0);\n                var TimeCell = row.insertCell(0);\n                var SymbolCell = row.insertCell(1);\n                var QuotesCell = row.insertCell(2);\n                var BBOCell = row.insertCell(3);\n                var TradesCell = row.insertCell(4);\n\n                TimeCell.innerHTML = `${data[x].Time}`\n                SymbolCell.innerHTML = `${data[x].Symbol}`\n                QuotesCell.innerHTML = `${data[x].Quotes}`\n                BBOCell.innerHTML = `${data[x].BBO}`\n                TradesCell.innerHTML = `${data[x].Trades}`\n\n                if (parseInt(data[x].Quotes) > 800) {\n                    row.classList.add('table-warning');\n                    row.classList.add('bold');\n                }\n\n                if (parseInt(data[x].Trades) > 500) {\n                    row.classList.add('table-warning');\n                    row.classList.add('bold');\n                }\n            }\n        }\n    });\n\n}\nconst Tables = () => {\n    return (\n        <div className=\"tables-container\">\n\n            <table className=\"table\">\n            <caption>Equities</caption>\n                <thead>\n                <tr>\n                    <th scope=\"col\">Time</th>\n                    <th scope=\"col\">Symbol</th>\n                    <th scope=\"col\">Quotes</th>\n                    <th scope=\"col\">BBO</th>\n                    <th scope=\"col\">Trades</th>\n                </tr>\n                </thead>\n                <tbody id='tableBody'>\n                </tbody>\n            </table>\n            <table className=\"table\">\n            <caption>Futures</caption>\n                <thead>\n                <tr>\n                    <th scope=\"col\">Time</th>\n                    <th scope=\"col\">Symbol</th>\n                    <th scope=\"col\">Quotes</th>\n                    <th scope=\"col\">BBO</th>\n                    <th scope=\"col\">Trades</th>\n                </tr>\n                </thead>\n                <tbody id='futures-tableBody'>\n                </tbody>\n            </table>\n            <table className=\"table\">\n            <caption>Options</caption>\n                <thead>\n                <tr>\n                    <th scope=\"col\">Time</th>\n                    <th scope=\"col\">Symbol</th>\n                    <th scope=\"col\">Quotes</th>\n                    <th scope=\"col\">BBO</th>\n                    <th scope=\"col\">Trades</th>\n                </tr>\n                </thead>\n                <tbody id='options-tableBody'>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Tables\n","import React from 'react'\n\nconst Headers = () => {\n    return (\n        <div>\n            <div className=\"header-main\">\n                <h1>HFT Footprint</h1>\n            </div>            \n        </div>\n    )\n}\n\nexport default Headers\n","import React from 'react'\n\nconst Nav = () => {\n    return (\n        <nav className=\"navbar navbar-light bg-light\" style={{position:\"fixed\", top:\"0\", width:\"100%\", zIndex: \"99\"}}>\n          <a href=\"/\" className=\"navbar-brand\">\n            EquityPulse\n          </a>\n      </nav>\n    )\n}\n\nexport default Nav\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Tables from './Componets/Tables';\nimport Headers from './Componets/Headers';\nimport Nav from './Componets/Nav';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Headers />\n      <Tables />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}